# -*- coding: utf-8 -*-
# Generated by Django 1.9.3 on 2016-05-08 23:02
from __future__ import unicode_literals

from django.apps import apps as global_apps
from django.db import migrations

def migrate_stock(apps, schema_editor):
    try:
        old_stock = apps.get_model("stock", "StockItem")
    except LookupError:
        print("The Stock app is not installed. Skipping migration step.")
        return

    new_stock = apps.get_model("rapid_sales_tool", "StockItem")
    new_stock.objects.bulk_create([
        new_stock(pk = old_object.pk,
                  item_name = old_object.item_name,
                  item_count = old_object.item_count,
                  unit_cost = old_object.unit_cost)
        for old_object in old_stock.objects.all()])

def migrate_orders(apps, schema_editor):
    try:
        old_orders = apps.get_model("orders", "Order")
    except LookupError:
        print("The Orders app is not installed. Skipping migration step.")
        return

    new_stock = apps.get_model("rapid_sales_tool", "StockItem")
    new_orders = apps.get_model("rapid_sales_tool", "Order")
    new_orders.objects.bulk_create([
        new_orders(pk = old_object.pk,
                   customer_name = old_object.customer_name,
                   item = new_stock(pk=old_object.item.pk),
                   item_quantity = old_object.item_quantity,
                   order_price = old_object.order_price,
                   is_paid = old_object.is_paid)
        for old_object in old_orders.objects.all()])

class Migration(migrations.Migration):

    dependencies = [
        ('rapid_sales_tool', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(migrate_stock, migrations.RunPython.noop),
        migrations.RunPython(migrate_orders, migrations.RunPython.noop),
    ]

    if global_apps.is_installed('orders'):
        dependencies.append(('orders', '0001_initial'))
    if global_apps.is_installed('stock'):
        dependencies.append(('stock', '0001_initial'))